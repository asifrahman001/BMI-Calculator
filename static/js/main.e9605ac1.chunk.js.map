{"version":3,"sources":["logo.svg","helpers/bmi_calculator.js","helpers/select_text.js","components/Bmi.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","setBMIClass","finalBMI","bmiCalculation","weight","height","method","bmi","parseFloat","isNaN","toFixed","class","selectText","id","sel","range","el","document","getElementById","window","getSelection","createRange","toString","setTimeout","selectNodeContents","removeAllRanges","addRange","selection","text","body","createTextRange","moveToElementText","select","Bmi","props","toggleMetric","calcultation_type","setState","calculateBmi","bmi_result","state","weight_value","height_value","bmi_class","onChangeInput","key","e","target","value","onIncrementValue","parseInt","onDecrementValue","copyText","execCommand","clearAll","metric_unit_map","active_button_class","button_class","className","onClick","this","bind","onChange","type","placeholder","src","PureComponent","App","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yKAAAA,EAAOC,QAAU,IAA0B,kC,0JCuBrCC,EAAc,SAACC,GACnB,OAAIA,EAAW,KACN,QACEA,GAAY,MAAQA,EAAW,MACjC,SACEA,GAAY,OAASA,EAAW,MAClC,OACEA,GAAY,GACd,aADF,GAKMC,EAnCQ,SAACC,EAAQC,EAAQC,GAGtC,IAAIC,EAFJC,WAAWJ,GACXI,WAAWH,GAGXD,EAASK,MAAML,GAAU,EAAIA,EAC7BC,EAASI,MAAMJ,GAAU,EAAIA,EAG3BE,EADa,WAAXD,EACIF,GAAUC,EAAS,IAAMA,EAAS,KAExB,IAATD,GAAiBC,EAASA,GAGnC,IAAIH,EAAWM,WAAWD,EAAIG,QAAQ,IAGtC,MAAO,CACLH,IAAKL,EACLS,MAJaV,EAAYC,KCQdU,EAvBI,SAACC,GAClB,IAAIC,EAAKC,EACLC,EAAKC,SAASC,eAAeL,GAC7BM,OAAOC,cAAgBH,SAASI,YAEZ,KADtBP,EAAMK,OAAOC,gBACLE,YACNH,OAAOI,YAAW,YAChBR,EAAQE,SAASI,eACXG,mBAAmBR,GACzBF,EAAIW,kBACJX,EAAIY,SAASX,KACZ,GAEIE,SAASU,WAEF,KADhBb,EAAMG,SAASU,UAAUN,eACjBO,QACNb,EAAQE,SAASY,KAAKC,mBAChBC,kBAAkBf,GACxBD,EAAMiB,WC6HGC,E,YAzIb,WAAYC,GAAQ,IAAD,uBACjB,4CAAMA,KAuBRC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZD,qBACC,EAAKE,eA3BS,EA6BnBA,aAAe,WACb,IAAIC,EAAa,CACfhC,IAAK,GACLI,MAAO,IAEuB,KAA5B,EAAK6B,MAAMC,cAAmD,KAA5B,EAAKD,MAAME,eAC/CH,EAAapC,EAAe,EAAKqC,MAAMC,aAAc,EAAKD,MAAME,aAAc,EAAKF,MAAMJ,oBAE3F,EAAKC,SAAS,CACZE,WAAYA,EAAWhC,IACvBoC,UAAWJ,EAAW5B,SAvCP,EA0CnBiC,cAAgB,SAACC,EAAKC,GACpB,EAAKT,SAAL,eACGQ,EAAMC,EAAEC,OAAOC,OACf,EAAKV,eA7CS,EA+CnBW,iBAAmB,SAACJ,EAAKC,GACvB,EAAKT,SAAL,eACGQ,EAAMK,SAAS,EAAKV,MAAMK,IAAQ,GAClC,EAAKP,eAlDS,EAoDnBa,iBAAmB,SAACN,EAAKC,GACvB,GAAII,SAAS,EAAKV,MAAMK,KAAS,EAC/B,OAAO,EAET,EAAKR,SAAL,eACGQ,EAAMK,SAAS,EAAKV,MAAMK,IAAQ,GAClC,EAAKP,eA1DS,EA4DnBc,SAAW,WACTxC,EAAW,aACXK,SAASoC,YAAY,SA9DJ,EAgEnBC,SAAW,WACT,EAAKjB,SAAS,CACZI,aAAc,GACdC,aAAc,GACdH,WAAY,GACZI,UAAW,MAnEb,IAAIJ,EAAapC,EAAe,GAAI,GAAI,UAFvB,OAGjB,EAAKqC,MAAQ,CACXJ,kBAAmB,SACnBG,WAAYA,EAAWhC,IACvBoC,UAAWJ,EAAW5B,MACtB8B,aAAc,KACdC,aAAc,MAEhB,EAAKa,gBAAkB,CACrB,OAAU,CACR,OAAU,KACV,OAAU,MAEZ,SAAY,CACV,OAAU,SACV,OAAU,OAGd,EAAKC,oBAAsB,qDAC3B,EAAKC,aAAe,qEArBH,E,sEAyEjB,OACE,yBAAKC,UAAU,eACb,wBAAIA,UAAU,kDAAd,oCACA,yBAAKA,UAAU,QACb,4BAAQC,QAASC,KAAKzB,aAAa0B,KAAK,KAAM,UAAWH,UAA4C,WAAjCE,KAAKpB,MAAMJ,kBAAiCwB,KAAKJ,oBAAsBI,KAAKH,cAAhJ,UAGA,4BAAQE,QAASC,KAAKzB,aAAa0B,KAAK,KAAM,YAAaH,UAA4C,aAAjCE,KAAKpB,MAAMJ,kBAAmCwB,KAAKJ,oBAAsBI,KAAKH,cAApJ,aAIF,yBAAKC,UAAU,QACb,4BAAQC,QAASC,KAAKN,SAAUI,UAAS,kDAAzC,cAIF,6BACE,yBAAKA,UAAU,QACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,0DACb,0BAAMA,UAAU,IAAhB,iBAA8BE,KAAKL,gBAAgBK,KAAKpB,MAAMJ,mBAAmBhC,OAAjF,OAEF,2BAAO4C,MAAOY,KAAKpB,MAAMC,aAAcqB,SAAUF,KAAKhB,cAAciB,KAAK,KAAM,gBAAiBH,UAAU,2JAA2JK,KAAK,SAASC,YAAY,KAC/R,yBAAKN,UAAU,yCACb,4BAAQC,QAASC,KAAKX,iBAAiBY,KAAK,KAAM,gBAAiBH,UAAU,uBAAuBK,KAAK,UAAzG,KACA,4BAAQJ,QAASC,KAAKT,iBAAiBU,KAAK,KAAM,gBAAiBH,UAAU,uBAAuBK,KAAK,UAAzG,QAIN,yBAAKL,UAAU,QACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,0DACb,0BAAMA,UAAU,IAAhB,iBAA8BE,KAAKL,gBAAgBK,KAAKpB,MAAMJ,mBAAmB/B,OAAjF,OAEF,2BAAO2C,MAAOY,KAAKpB,MAAME,aAAcoB,SAAUF,KAAKhB,cAAciB,KAAK,KAAM,gBAAiBH,UAAU,2JAA2JK,KAAK,SAASC,YAAY,KAC/R,yBAAKN,UAAU,yCACb,4BAAQC,QAASC,KAAKX,iBAAiBY,KAAK,KAAM,gBAAiBH,UAAU,uBAAuBK,KAAK,UAAzG,KACA,4BAAQJ,QAASC,KAAKT,iBAAiBU,KAAK,KAAM,gBAAiBH,UAAU,uBAAuBK,KAAK,UAAzG,QAIN,yBAAKL,UAAU,IACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,0DACb,0BAAMA,UAAU,IAAhB,eAEF,yBAAK7C,GAAG,YAAY6C,UAAU,gIAAgIE,KAAKpB,MAAMD,YACzK,yBAAKoB,QAASC,KAAKR,SAAUM,UAAU,sCACrC,yBAAKA,UAAU,YAAYO,IAAI,kBAKvC,yBAAKP,UAAU,SACb,yBAAKA,UAAS,UAA8B,UAAzBE,KAAKpB,MAAMG,UAAwB,SAAW,GAAnD,yDAA8GsB,IAAI,yBAChI,yBAAKP,UAAS,UAA8B,WAAzBE,KAAKpB,MAAMG,UAAyB,SAAW,GAApD,yDAA+GsB,IAAI,oBACjI,yBAAKP,UAAS,UAA8B,SAAzBE,KAAKpB,MAAMG,UAAuB,SAAW,GAAlD,yDAA6GsB,IAAI,wBAC/H,yBAAKP,UAAS,UAA8B,UAAzBE,KAAKpB,MAAMG,UAAwB,SAAW,GAAnD,yDAA8GsB,IAAI,yB,GAnIxHC,iBCUHC,E,iLARX,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,W,GAJUU,aCKZC,EAAcC,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1C,QACfoC,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAAS1E,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmB0D,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,kBAAwB1E,OAAOoD,UAC3CuB,SAAW3E,OAAOoD,SAASuB,OAIvC,OAGF3E,OAAO4E,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,kBAAN,sBAEPxB,EAwCV,SAAiCM,GAE/BqB,MAAMrB,GACHI,MAAK,SAAAkB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7B5D,OAAOoD,SAASiC,eAKpB9B,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEA5DAkB,CAAwB9B,GAGxBD,EAAgBC,OChCxB+B,K","file":"static/js/main.e9605ac1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const bmiCalculation = (weight, height, method) => {\n  parseFloat(weight);\n  parseFloat(height);\n  let bmi;\n\n  weight = isNaN(weight) ? 0 : weight;\n  height = isNaN(height) ? 0 : height;\n\n  if (method === \"metric\") {\n    bmi = weight / (height / 100 * height / 100);\n  } else {\n    bmi = (weight * 703) / (height * height)\n  };\n\n  let finalBMI = parseFloat(bmi.toFixed(2));\n  let BMIClass = setBMIClass(finalBMI);\n\n  return {\n    bmi: finalBMI,\n    class: BMIClass\n  }\n};\n\nconst setBMIClass = (finalBMI) => {\n  if (finalBMI < 18.5) {\n    return \"under\";\n  } else if (finalBMI >= 18.5 && finalBMI < 24.99) {\n    return \"normal\";\n  } else if (finalBMI >= 24.99 && finalBMI < 29.99) {\n    return \"over\";\n  } else if (finalBMI >= 30) {\n    return \"obese\";\n  }\n};\n\nexport default bmiCalculation;","const selectText = (id) => {\n  var sel, range;\n  var el = document.getElementById(id); //get element id\n  if (window.getSelection && document.createRange) { //Browser compatibility\n    sel = window.getSelection();\n    if (sel.toString() == '') { //no text selection\n      window.setTimeout(function () {\n        range = document.createRange(); //range object\n        range.selectNodeContents(el); //sets Range\n        sel.removeAllRanges(); //remove all ranges from selection\n        sel.addRange(range);//add Range to a Selection.\n      }, 1);\n    }\n  } else if (document.selection) { //older ie\n    sel = document.selection.createRange();\n    if (sel.text == '') { //no text selection\n      range = document.body.createTextRange();//Creates TextRange object\n      range.moveToElementText(el);//sets Range\n      range.select(); //make selection.\n    }\n  }\n}\n\nexport default selectText;\n","import React, { PureComponent } from 'react';\nimport bmiCalculation from '../helpers/bmi_calculator';\nimport selectText from '../helpers/select_text';\n\n\nclass Bmi extends PureComponent {\n  constructor(props) {\n    super(props);\n    let bmi_result = bmiCalculation(70, 60, 'metric');\n    this.state = {\n      calcultation_type: 'metric',\n      bmi_result: bmi_result.bmi,\n      bmi_class: bmi_result.class,\n      weight_value: '70',\n      height_value: '60'\n    }\n    this.metric_unit_map = {\n      'metric': {\n        'height': 'cm',\n        'weight': 'kg'\n      },\n      'imperial': {\n        'height': 'inches',\n        'weight': 'lb'\n      }\n    }\n    this.active_button_class = 'c-bmi__btn c-bmi__btn--active text-white py-2 px-4';\n    this.button_class = 'c-bmi__btn c-bmi__btn--transparent bg-transparent py-2 px-4 border';\n\n  }\n  toggleMetric = (calcultation_type) => {\n    this.setState({\n      calcultation_type\n    }, this.calculateBmi);\n  }\n  calculateBmi = () => {\n    let bmi_result = {\n      bmi: \"\",\n      class: \"\"\n    };\n    if (this.state.weight_value !== \"\" && this.state.height_value !== \"\") {\n      bmi_result = bmiCalculation(this.state.weight_value, this.state.height_value, this.state.calcultation_type);\n    }\n    this.setState({\n      bmi_result: bmi_result.bmi,\n      bmi_class: bmi_result.class\n    })\n  }\n  onChangeInput = (key, e) => {\n    this.setState({\n      [key]: e.target.value\n    }, this.calculateBmi)\n  }\n  onIncrementValue = (key, e) => {\n    this.setState({\n      [key]: parseInt(this.state[key]) + 1\n    }, this.calculateBmi)\n  }\n  onDecrementValue = (key, e) => {\n    if (parseInt(this.state[key]) <= 0) {\n      return false;\n    }\n    this.setState({\n      [key]: parseInt(this.state[key]) - 1\n    }, this.calculateBmi)\n  }\n  copyText = () => {\n    selectText(\"bmiResult\");\n    document.execCommand(\"copy\");\n  }\n  clearAll = () => {\n    this.setState({\n      weight_value: \"\",\n      height_value: \"\",\n      bmi_result: \"\",\n      bmi_class: \"\"\n    })\n  }\n  render() {\n    return (\n      <div className=\"c-bmi mb-10\">\n        <h3 className=\"text-2xl p-2 mb-5 border-b bg-white text-black\">BMI(Body Mass Index) Calculator </h3>\n        <div className=\"mb-5\">\n          <button onClick={this.toggleMetric.bind(null, 'metric')} className={this.state.calcultation_type === 'metric' ? this.active_button_class : this.button_class}>\n            Metric\n          </button>\n          <button onClick={this.toggleMetric.bind(null, 'imperial')} className={this.state.calcultation_type === 'imperial' ? this.active_button_class : this.button_class}>\n            Imperial\n          </button>\n        </div>\n        <div className=\"mb-5\">\n          <button onClick={this.clearAll} className={`b-r-10 c-bmi__btn--active text-white py-2 px-4`}>\n            Clear All\n          </button>\n        </div>\n        <div>\n          <div className=\"mb-5\">\n            <div className=\"\">\n              <div className=\"inline-block w-1/3 c-bmi__metric-caption p-3 align-top\">\n                <span className=\"\">{`Weight(${this.metric_unit_map[this.state.calcultation_type].weight})`}</span>\n              </div>\n              <input value={this.state.weight_value} onChange={this.onChangeInput.bind(null, 'weight_value')} className=\"text-green-900 inline-block w-1/2 bg-white focus:outline-none focus:shadow-outline border border-gray-300 py-2 px-4 block appearance-none leading-normal\" type=\"number\" placeholder=\"\" />\n              <div className=\"align-top inline-block c-bmi__changer\">\n                <button onClick={this.onIncrementValue.bind(null, 'weight_value')} className=\"pl-2 pr-2 c-bmi__inc\" type=\"button\">+</button>\n                <button onClick={this.onDecrementValue.bind(null, 'weight_value')} className=\"pl-2 pr-2 c-bmi__inc\" type=\"button\">-</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"mb-5\">\n            <div className=\"\">\n              <div className=\"inline-block w-1/3 c-bmi__metric-caption p-3 align-top\">\n                <span className=\"\">{`Height(${this.metric_unit_map[this.state.calcultation_type].height})`}</span>\n              </div>\n              <input value={this.state.height_value} onChange={this.onChangeInput.bind(null, 'height_value')} className=\"text-green-900 inline-block w-1/2 bg-white focus:outline-none focus:shadow-outline border border-gray-300 py-2 px-4 block appearance-none leading-normal\" type=\"number\" placeholder=\"\" />\n              <div className=\"align-top inline-block c-bmi__changer\">\n                <button onClick={this.onIncrementValue.bind(null, 'height_value')} className=\"pl-2 pr-2 c-bmi__inc\" type=\"button\">+</button>\n                <button onClick={this.onDecrementValue.bind(null, 'height_value')} className=\"pl-2 pr-2 c-bmi__inc\" type=\"button\">-</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"\">\n            <div className=\"\">\n              <div className=\"inline-block w-1/3 c-bmi__metric-caption p-3 align-top\">\n                <span className=\"\">BMI Result</span>\n              </div>\n              <div id=\"bmiResult\" className=\"c-bmi__result text-green-900 inline-block w-1/2 bg-white focus:outline-none focus:shadow-outline border border-gray-300 py-2\">{this.state.bmi_result}</div>\n              <div onClick={this.copyText} className=\"align-top inline-block c-bmi__copy\">\n                <img className=\"pl-2 pr-2\" src=\"/copy.png\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-10\">\n          <img className={`${this.state.bmi_class === 'under' ? 'active' : ''} inline-block w-1/5 opacity-50 c-bmi__class md:w-2/12`} src=\"/BMI-Underweight.png\" />\n          <img className={`${this.state.bmi_class === 'normal' ? 'active' : ''} inline-block w-1/5 opacity-50 c-bmi__class md:w-2/12`} src=\"/BMI-Normal.png\" />\n          <img className={`${this.state.bmi_class === 'over' ? 'active' : ''} inline-block w-1/5 opacity-50 c-bmi__class md:w-2/12`} src=\"/BMI-Overweight.png\" />\n          <img className={`${this.state.bmi_class === 'obese' ? 'active' : ''} inline-block w-1/5 opacity-50 c-bmi__class md:w-2/12`} src=\"/BMI-Obese.png\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Bmi;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Bmi from './components/Bmi';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Bmi />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}